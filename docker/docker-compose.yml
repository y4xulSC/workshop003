version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE:      ${MYSQL_DATABASE}
      MYSQL_USER:          ${MYSQL_USER}   
      MYSQL_PASSWORD:      ${MYSQL_PASSWORD} 
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../mysql-init:/docker-entrypoint-initdb.d 

  data_producer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.producer
    container_name: data_producer
    depends_on:
      - kafka
    env_file:
      - .env
    volumes:
      - ../data/processed:/app/data_to_process
    restart: on-failure

  model_consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.consumer
    container_name: model_consumer
    depends_on:
      - kafka
      - mysql
    env_file:
      - .env
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: "3306"
    restart: on-failure

volumes:
  mysql_data: